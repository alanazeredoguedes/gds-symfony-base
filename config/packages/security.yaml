security:
    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: 'auto'
            cost: 15

    # ####################################################################################
    # Provedores de Usuários
    providers:

        # Provedor administrativo responsável pelo acesso ao ADMIN
        security.provider.admin.administrator:
            entity:
                class: App\Bundle\SecurityBundle\Entity\Administrator
                property: email

        # Provedor padrão responsável pelo acesso às rotas de API
#        security.provider.api.user:
#            entity:
#                class: App\Bundle\SecurityBundle\Entity\Administrator
#                property: email

        # Conjunto de provedores que possuem acesso às rotas de API
#        security.provider.all.api:
#            chain:
#                providers: [ 'security.provider.api.user' , ]

    # ####################################################################################
    # Firewalls de Segurança
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall responsável pelas rotas rest API
#        api:
#            provider: security.provider.all.api
#            pattern: ^/api
#            stateless: true
#            jwt: ~
#            access_denied_handler: App\Bundle\SecurityBundle\Security\ApiAccessDeniedHandler

        # Firewall responsável pelo ADMIN
        admin:
            pattern: /admin(.*)
            lazy: true
            provider: security.provider.admin.administrator
            custom_authenticator: App\Bundle\SecurityBundle\Security\UserAuthenticator
            access_denied_handler: App\Bundle\SecurityBundle\Security\AdminAccessDeniedHandler
            logout:
                path: admin_app_setting_setting_logout
                target: /admin/login


    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: IS_AUTHENTICATED_FULLY }
        #- { path: ^/api/register, roles: PUBLIC_ACCESS }
        #- { path: ^/api/login, roles: PUBLIC_ACCESS }
        #- { path: ^/api,       roles: PUBLIC_ACCESS }
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin/, roles: IS_AUTHENTICATED_FULLY }









































#security:
#    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
#    password_hashers:
#        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
#    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
#    providers:
#        # used to reload user from session & other features (e.g. switch_user)
#        app_user_provider:
#            entity:
#                class: App\Bundle\UserBundle\Entity\AdminUser
#                property: email
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            lazy: true
#            provider: app_user_provider
#
#            # activate different ways to authenticate
#            # https://symfony.com/doc/current/security.html#the-firewall
#
#            # https://symfony.com/doc/current/security/impersonating_user.html
#            # switch_user: true
#
#    # Easy way to control access for large sections of your site
#    # Note: Only the *first* access control that matches will be used
#    access_control:
#        # - { path: ^/admin, roles: ROLE_ADMIN }
#        # - { path: ^/profile, roles: ROLE_USER }
#
#when@test:
#    security:
#        password_hashers:
#            # By default, password hashers are resource intensive and take time. This is
#            # important to generate secure password hashes. In tests however, secure hashes
#            # are not important, waste resources and increase test times. The following
#            # reduces the work factor to the lowest possible values.
#            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#                algorithm: auto
#                cost: 4 # Lowest possible value for bcrypt
#                time_cost: 3 # Lowest possible value for argon
#                memory_cost: 10 # Lowest possible value for argon
